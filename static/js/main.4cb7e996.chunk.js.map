{"version":3,"sources":["resources/logo.svg","resources/Stairsladyfoot.svg","components/Question.js","components/Answer.js","components/Quiz.js","components/QuestionCount.js","components/Score.js","components/StyledProgressbar.js","components/QuizInfo.js","components/Confetti.js","components/Result.js","components/Start.js","components/AppHeader.js","components/Footer.js","components/Dialog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Question","props","answerclass","string","answerCorrect","answerFalse","react_default","a","createElement","Grid_default","item","xs","className","Typography_default","align","variant","component","content","DOMParser","parseFromString","body","textContent","styleanswer","paddingBottom","paddingTop","withStyles","theme","root","Object","objectSpread","mixins","gutters","spacing","unit","classes","answercontenttrue","answercontent","answercontentfalse","style","textAlign","Paper_default","square","elevation","direction","alignItems","justify","container","Button_default","fullWidth","color","onClick","onAnswerSelected","Quiz","components_Question","question","components_Answer","questionId","QuestionCount","counter","total","Score","score","StyledProgressbar","dist_default","percentage","this","strokeWidth","styles","width","marginLeft","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","React","Component","QuizInfo","components_QuestionCount","questionTotal","components_Score","components_StyledProgressbar","Confettis","react_confetti_min_default","numberOfPieces","run","ConfettiShow","window","innerWidth","height","innerHeight","Confetti","sm","quizResult","onTryAgain","icon","gutterBottom","handleClickOpenDialog","Icon_default","onStartGame","AppHeader","id","src","footerimg","alt","Footer","SimpleDialog","handleClose","_this","onClose","selectedValue","handleListItemClick","value","_this$props","other","objectWithoutProperties","Dialog_default","assign","open","maxWidth","aria-labelledby","DialogTitle_default","questions","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","result","answerOptions","answerGiven","answer","mode","response","undefined","endpoint","outoftime","handleAnswerSelected","bind","assertThisInitialized","startGame","_this2","socketIOClient","on","data","parseInt","fetch","then","res","json","loadedQuestions","console","log","results","map","loadedQuestion","correct_answer","catch","err","error","_this3","interval","setInterval","clearInterval","setResults","_this4","handleAnswerSubmit","_this5","length","onAnswerCorrect","setTimeout","setNextQuestion","getResults","onAnswerFalse","setUserAnswer","confetti","components_Quiz","notification","getAnswerClasses","components_QuizInfo","components_Start","components_Dialog","_this6","_this7","onStartCounter","components_Result","restartGame","components_AppHeader","renderStart","renderResult","renderQuiz","components_Footer","Boolean","location","hostname","match","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","fontFamily","useNextVariants","ReactDOM","render","core_styles","href","rel","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cb7e996.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a2a92be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Stairsladyfoot.f666e377.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\n\r\nfunction decodeUTF(string){\r\n  let parser = new DOMParser;\r\n  let dom = parser.parseFromString(\r\n    '<!doctype html><body>'+string, 'text/html'\r\n  );\r\n  return dom.body.textContent;\r\n}\r\n\r\n\r\nfunction Question(props) {\r\n\r\n\r\n\r\n  \r\nlet answerclass\r\n\r\n  if(props.answerCorrect === true){\r\n    answerclass = \"answercorrect\"\r\n  } else if(props.answerFalse === true){\r\n    answerclass = \"answerfalse\"\r\n  } else {\r\n    answerclass = \"answer\"\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Grid item xs={12}>\r\n        <div  className={\r\n                     answerclass\r\n                    }>\r\n          <Typography align=\"center\"  variant=\"h3\" component=\"h2\">\r\n\r\n            { decodeUTF(props.content) }\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default (Question);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styleanswer = {\r\n  paddingBottom: 2,\r\n  paddingTop: 2\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nfunction Answer(props) {\r\n  const { classes } = props;\r\n  const answercontenttrue = props.answercontent === \"True\";\r\n  const answercontentfalse = props.answercontent === \"False\";\r\n  return (\r\n    <div style={{ textAlign: \"center\" }} className=\"answerOption\">\r\n      <Grid item xs={12}>\r\n        <Paper square className={classes.root} elevation={4}>\r\n          <Typography variant=\"h6\">\r\n            <p>Selected answer </p>\r\n            <hr />\r\n            <Grid\r\n              item\r\n              direction=\"row\"\r\n              alignItems=\"stretch\"\r\n              justify=\"flex-start\"\r\n              container\r\n              spacing={24}\r\n            >\r\n              <Grid item xs={6}>\r\n                 <Paper style={styleanswer} square elevation={4}>\r\n                  <div\r\n                    className={\r\n                      answercontenttrue ? \"selectedtrue\" : \"unselected\"\r\n                    }\r\n                  >\r\n                    <p>True</p>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n              <Paper style={styleanswer} square elevation={4}>\r\n                  <div\r\n                    className={\r\n                      answercontentfalse ? \"selectedfalse\" : \"unselected\"\r\n                    }\r\n                  >\r\n                    <p>False</p>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n          <hr />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={props.onAnswerSelected}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nAnswer.propTypes = {\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Answer);\r\n","import React from \"react\";\r\nimport Question from \"../components/Question\";\r\nimport Answer from \"../components/Answer\";\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction Quiz(props) {\r\n  return (\r\n    <Grid\r\n      direction=\"column\"\r\n      alignItems=\"stretch\"\r\n      justify=\"flex-start\"\r\n      container\r\n      spacing={24}\r\n    >\r\n      <Grid item xs={12}>\r\n        <Question content={props.question} answerFalse={props.answerFalse} answerCorrect={props.answerCorrect} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Answer\r\n          questionId={props.questionId}\r\n          onAnswerSelected={props.onAnswerSelected}\r\n          answercontent={props.answercontent}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  question: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction QuestionCount(props) {\r\n  return (\r\n    <div className=\"questionCount\" style={{ textAlign: \"center\" }}>\r\n      <h2>\r\n        Question <span>{props.counter}</span> of <span>{props.total}</span>\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionCount.propTypes = {\r\n  counter: PropTypes.number,\r\n  total: PropTypes.number\r\n};\r\n\r\nexport default QuestionCount;\r\n","import React from \"react\";\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <h2 className=\"Score\" style={{ textAlign: \"center\" }}>\r\n      Score: {props.score}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\n\r\n\r\n\r\n\r\nclass StyledProgressbar extends React.Component {\r\n\r\n    render(){\r\n        return( <CircularProgressbar\r\n            percentage={this.props.percentage}\r\n            // Path width must be customized with strokeWidth,\r\n            // since it informs dimension calculations.\r\n            strokeWidth={20}\r\n            // You can override styles either by specifying this \"styles\" prop,\r\n            // or by overriding the default CSS here:\r\n            // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\r\n            styles={{\r\n              // Customize the root svg element\r\n              root: {\r\n                  width: 200,\r\n                  marginLeft: 35\r\n                  \r\n      \r\n              },\r\n              // Customize the path, i.e. the part that's \"complete\"\r\n              path: {\r\n                // Tweak path color:\r\n                stroke: '#f88',\r\n                // Tweak path to use flat or rounded ends:\r\n                strokeLinecap: 'butt',\r\n                // Tweak transition animation:\r\n                transition: 'stroke-dashoffset 0.5s ease 0s',\r\n              },\r\n              // Customize the circle behind the path\r\n              trail: {\r\n                // Tweak the trail color:\r\n                stroke: '#d6d6d6',\r\n              },\r\n              // Customize the text\r\n              text: {\r\n                // Tweak text color:\r\n                fill: '#f88',\r\n                // Tweak text size:\r\n                fontSize: '30px',\r\n              },\r\n            }}\r\n          />)\r\n    }\r\n        \r\n       \r\n   \r\n  \r\n}\r\nexport default StyledProgressbar;\r\n\r\n  ","import React from \"react\";\r\nimport QuestionCount from \"../components/QuestionCount\";\r\nimport PropTypes from \"prop-types\";\r\nimport Score from \"../components/Score\";\r\nimport StyledProgressbar from \"./StyledProgressbar\"\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nlet percentage = 0\r\n\r\nclass QuizInfo extends React.Component {\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n  \r\n  onNextquestion(){\r\n    \r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    // clearInterval(this.interval);\r\n    // percentage = 0\r\n    // return percentage\r\n  }\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return(\r\n\r\n       <Paper square className={classes.root} elevation={4}>\r\n      <QuestionCount counter={this.props.questionId} total={this.props.questionTotal} />\r\n      <Score score={this.props.score} />\r\n      <StyledProgressbar percentage={this.props.percentage}/>\r\n    </Paper>\r\n    )\r\n  }\r\n}\r\n  \r\n  \r\n\r\nQuizInfo.propTypes = {\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  score: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nexport default withStyles(styles)(QuizInfo);\r\n","import React from \"react\";\r\nimport Confetti from \"react-confetti\";\r\n\r\n\r\nfunction Confettis(props) {\r\n  \r\n    return <Confetti className=\"confetti\" numberOfPieces={750} run={props.ConfettiShow} width={window.innerWidth} height={window.innerHeight} />;\r\n  }\r\n\r\n\r\nexport default Confettis;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Confettis from \"./Confetti\"\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nfunction Result(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid container>\r\n    <Confettis ConfettiShow={props.ConfettiShow}></Confettis>\r\n      <Grid item sm={6}>\r\n        <Paper square className={classes.root} elevation={4}>\r\n          <Typography variant=\"h5\">\r\n            End result <br />\r\n            <hr />\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <strong>{props.quizResult}</strong>!\r\n          </Typography>\r\n          <hr />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={props.onTryAgain}\r\n          >\r\n            PLAY AGAIN\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Result);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2\r\n  },\r\n  icon: {\r\n    marginLeft: 10\r\n  }\r\n});\r\n\r\nfunction Start(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <Grid\r\n        direction=\"column\"\r\n        alignItems=\"stretch\"\r\n        justify=\"flex-start\"\r\n        container\r\n        spacing={24}\r\n      >\r\n        <Grid item xs={9}>\r\n          <Paper square className={classes.root} elevation={4}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              <strong>TrapTrivia</strong>\r\n            </Typography>\r\n            <hr />\r\n            <Typography component=\"p\">\r\n              Test your knowledge and climb up!\r\n            </Typography>\r\n            <hr />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={props.handleClickOpenDialog}\r\n            >\r\n              Game instrutions\r\n              <Icon className={classes.icon} fontSize=\"small\">\r\n                info_outlined\r\n              </Icon>\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Paper square className={classes.root} elevation={4}>\r\n            <Typography gutterBottom component=\"p\" variant=\"h5\">\r\n              Start a game!\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={props.onStartGame}\r\n            >\r\n              START GAME\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Start);\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport footerimg from \"../resources/logo.svg\";\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <div id=\"appheader\">\r\n      <div className=\"header\">\r\n        <img src={footerimg} alt=\"footerimg\" />\r\n        <h3>TrapTrivia</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport footerimg from \"../resources/Stairsladyfoot.svg\";\r\n\r\nfunction Footer() {\r\n  return <img className=\"footerimg\" src={footerimg} alt=\"footerimg\" />;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nclass SimpleDialog extends React.Component {\r\n  handleClose = () => {\r\n    this.props.onClose(this.props.selectedValue);\r\n  };\r\n\r\n  handleListItemClick = value => {\r\n    this.props.onClose(value);\r\n  };\r\n\r\n  render() {\r\n    const { classes, onClose, selectedValue, ...other } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        fullWidth\r\n        open={true}\r\n        maxWidth=\"sm\"\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        {...other}\r\n      >\r\n        <DialogTitle id=\"simple-dialog-title\">Instructions</DialogTitle>\r\n        <DialogTitle id=\"simple-dialog-title\">- Tee questions for the game are true or false questions</DialogTitle>\r\n        <DialogTitle id=\"simple-dialog-title\">- You answer by standing on either the true or false side </DialogTitle>\r\n        <DialogTitle id=\"simple-dialog-title\">- You have 10 seconds to answer</DialogTitle>\r\n        <DialogTitle id=\"simple-dialog-title\">- If you can complete all the questions you win!</DialogTitle>\r\n        <DialogTitle id=\"simple-dialog-title\">- If you answer incorrectly you have to start over</DialogTitle>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleDialog;\r\n","import React, { Component } from \"react\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport QuizInfo from \"./components/QuizInfo\";\r\nimport Result from \"./components/Result\";\r\nimport Start from \"./components/Start\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport \"./App.css\";\r\nimport AppHeader from \"./components/AppHeader\";\r\nimport Footer from \"./components/Footer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleDialog from \"./components/Dialog\";\r\n\r\nlet questions = []\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: 0,\r\n      result: 0,\r\n      questionId: 1,\r\n      question: \"\",\r\n      answerOptions: [],\r\n      answerGiven: \"\",\r\n      answer: \"\",\r\n      score: 0,\r\n      mode: \"begin\",\r\n      response: undefined,\r\n      endpoint: \"http://127.0.0.1:4001\",\r\n      open: false,\r\n      answerCorrect: false,\r\n      answerFalse: false,\r\n      ConfettiShow:false,\r\n      percentage: 0,\r\n      outoftime:false\r\n    };\r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n    this.onTryAgain = this.onTryAgain.bind(this);\r\n    this.startGame = this.startGame.bind(this);\r\n  }\r\n\r\n\r\n  \r\n  componentDidMount() {\r\n    const { endpoint } = this.state;\r\n    const socket = socketIOClient(endpoint);\r\n    socket.on(\"FromAPI\", data => {\r\n      // console.log(data);\r\n\r\n      if (parseInt(data) === 1) {\r\n        this.setState({ response: \"True\" });\r\n      } else if (parseInt(data) === 0) {\r\n        this.setState({ response: \"False\" });\r\n      } else {\r\n        this.setState({ response: \"nothing\" });\r\n      }\r\n    });\r\n\r\n\r\n\r\n    fetch(\"https://opentdb.com/api.php?amount=2&difficulty=easy&type=boolean\")\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(loadedQuestions => {\r\n      console.log(loadedQuestions.results);\r\n      questions = loadedQuestions.results.map(loadedQuestion => {\r\n        const formattedQuestion = {\r\n          question: loadedQuestion.question,\r\n          answer: loadedQuestion.correct_answer\r\n        };\r\n        return formattedQuestion;\r\n      });\r\n    })\r\n    .then(data =>\r\n      this.setState({\r\n        question: questions[0].question,\r\n        answer: questions[0].answer\r\n      })\r\n    )\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n  \r\n  return questions;\r\n}\r\n\r\n  onStartCounter(){\r\n   \r\n    this.interval = setInterval(() => {\r\n     this.setState({\r\n      percentage: this.state.percentage + 10\r\n     })\r\n     if(this.state.percentage === 110){\r\n      clearInterval(this.interval)\r\n      this.setState({\r\n        outoftime:true\r\n       })\r\n      this.setResults()\r\n      \r\n     }\r\n    }, 1000);\r\n\r\n\r\n\r\n  }\r\n  \r\n  \r\n\r\n  setUserAnswer() {\r\n    this.setState({ answerGiven: this.state.response }, () =>\r\n      this.handleAnswerSubmit()\r\n    );\r\n  }\r\n\r\n  setNextQuestion() {\r\n\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n \r\n      this.setState({\r\n        answerCorrect : false,\r\n        counter: counter,\r\n        questionId: questionId,\r\n        question: questions[counter].question,\r\n        answerGiven: \"\",\r\n        answer: questions[counter].answer,\r\n        percentage: 0\r\n      });\r\n  }\r\n\r\n  handleAnswerSubmit() {\r\n    if (this.state.answerGiven !== \"nothing\") {\r\n      if (this.state.answerGiven === this.state.answer) {\r\n        console.log(\"vraag goed beantwoord\");\r\n        this.setState({\r\n          score: this.state.score + 10\r\n        });\r\n        if (this.state.questionId < questions.length) {\r\n          this.onAnswerCorrect();\r\n          setTimeout(() => this.setNextQuestion(), 500);\r\n        } else {\r\n          this.onAnswerCorrect();\r\n          setTimeout(() => this.setResults(this.getResults()), 500);\r\n        }\r\n      } else {\r\n        this.onAnswerFalse();\r\n        setTimeout(() => this.setResults(this.getResults()), 500);\r\n      }\r\n    } else {\r\n      console.log(\"voer wat in\");\r\n    }\r\n  }\r\n\r\n  onAnswerCorrect() {\r\n    this.setState({ answerCorrect: true });\r\n  }\r\n\r\n  onAnswerFalse() {\r\n    this.setState({ answerFalse: true });\r\n  }\r\n\r\n  handleAnswerSelected() {\r\n    this.setUserAnswer();\r\n  }\r\n\r\n  getResults() {\r\n    const score = this.state.score;\r\n    return score;\r\n  }\r\n\r\n  setResults(result) {\r\n    this.result = this.state.score;\r\n    if (this.result >= 1 && this.result < 50) {\r\n      this.setState({ result: result });\r\n    } else if (this.result === questions.length*10) {\r\n      this.setState({\r\n        ConfettiShow:true,\r\n        result: \"You have completed TrapTrivia\",\r\n        confetti: true\r\n      });\r\n    } else if (this.state.outoftime){\r\n      this.setState({\r\n        result: \"You ran out of time..\",\r\n      });\r\n    } else {\r\n      console.log(this.state.outoftime)\r\n      this.setState({ result: \"Not even one?\" });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    if (this.state.mode === \"game\") {\r\n      \r\n\r\n      return (\r\n        <div className=\"container\">\r\n          <Grid\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"flex-start\"\r\n            spacing={24}\r\n            container\r\n          >\r\n            <Grid item xs={5}>\r\n              <Quiz\r\n                answerCorrect={this.state.answerCorrect}\r\n                answerFalse={this.state.answerFalse}\r\n                notification={this.state.notification}\r\n                answercontent={this.state.response}\r\n                question={this.state.question}\r\n                onAnswerSelected={this.handleAnswerSelected}\r\n                getAnswerClasses={this.getAnswerClasses}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"stretch\"\r\n              justify=\"flex-start\"\r\n              item\r\n              xs={3}\r\n            >\r\n              <Grid item>\r\n                <QuizInfo\r\n                  percentage={this.state.percentage}\r\n                  score={this.state.score}\r\n                  questionId={this.state.questionId}\r\n                  questionTotal={questions.length}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderStart() {\r\n    if (this.state.mode === \"begin\") {\r\n      return (\r\n        <div className=\"container\">\r\n          <Grid container alignItems=\"stretch\" justify=\"flex-start\">\r\n            <Grid item xs={8}>\r\n              <Start\r\n                handleClickOpenDialog={this.handleClickOpenDialog}\r\n                onStartGame={this.startGame}\r\n              />\r\n\r\n              <SimpleDialog\r\n                selectedValue={this.state.selectedValue}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleClickOpenDialog = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  restartGame() {\r\n    clearInterval(this.interval)\r\n\r\n    fetch(\"https://opentdb.com/api.php?amount=5&difficulty=easy&type=boolean\")\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(loadedQuestions => {\r\n      // console.log(loadedQuestions.results);\r\n      questions = loadedQuestions.results.map(loadedQuestion => {\r\n        const formattedQuestion = {\r\n          question: loadedQuestion.question,\r\n          answer: loadedQuestion.correct_answer\r\n        };\r\n        return formattedQuestion;\r\n      });\r\n    })\r\n    .then(data =>\r\n      this.setState({\r\n        question: questions[0].question,\r\n        answer: questions[0].answer\r\n      })\r\n    )\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n\r\n    \r\n    \r\n    setTimeout(() =>  this.setState({\r\n      mode: \"begin\",\r\n      result: 0,\r\n      counter: 0,\r\n      questionId: 1,\r\n      score: 0,\r\n      question: questions[0].question,\r\n      answer: questions[0].answer,\r\n      answerFalse:false,\r\n      answerCorrect: false,\r\n      ConfettiShow:false,\r\n      percentage: 0\r\n\r\n\r\n    }), 500);\r\n   \r\n  }\r\n\r\n  startGame() {\r\n    \r\n    setTimeout(() => this.setState({ mode: \"game\", percentage:0 }), 500);\r\n    clearInterval(this.interval)\r\n    this.onStartCounter()\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Grid\r\n          direction=\"column\"\r\n          alignItems=\"flex-start\"\r\n          justify=\"flex-start\"\r\n          container\r\n          spacing={24}\r\n        >\r\n          <Result ConfettiShow={this.state.ConfettiShow} quizResult={this.state.result} onTryAgain={this.onTryAgain} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onTryAgain() {\r\n    this.restartGame();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    console.log(this.state.percentage)\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <AppHeader />\r\n        {this.renderStart()}\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#757ce8\",\r\n      main: \"#e26161\",\r\n      dark: \"#FF4D4D\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: {\r\n      light: \"#ff7961\",\r\n      main: \"#f44336\",\r\n      dark: \"#ba000d\",\r\n      contrastText: \"#000\"\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: '\"source sans pro\"',\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <link\r\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n      rel=\"stylesheet\"\r\n    />\r\n    \r\n    <App />\r\n  </MuiThemeProvider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}